datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model Field {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(255)
  symbol      String    @db.VarChar(255)
  description String
  digimons    Digimon[]
}

model Rank {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String
  digimons    Digimon[]
}

model Attribute {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  symbol      String      @db.VarChar(255)
  description String
  strong      Attribute[] @relation("AttrWeakStrong", references: [id])
  weak        Attribute[] @relation("AttrWeakStrong", references: [id])
  digimons    Digimon[]
}

model Type {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(255)
  digimons Digimon[]
}

model Digimon {
  id           Int           @id @default(autoincrement())
  slug         String        @unique @db.VarChar(255)
  name         String        @unique @db.VarChar(255)
  otherNames   DigimonName[]
  isJogress    Boolean       @default(false)
  hasXAntibody Boolean       @default(false)
  prior        Digimon[]     @relation("PriorNext", references: [id])
  next         Digimon[]     @relation("PriorNext", references: [id])
  rank         Rank          @relation(fields: [rankId], references: [id])
  rankId       Int
  attribute    Attribute     @relation(fields: [attributeId], references: [id])
  attributeId  Int
  fields       Field[]
  type         Type?         @relation(fields: [typeId], references: [id])
  typeId       Int?
  series       Series[]
  episodes     Episode[]
  movies       Movie[]
  digimental   Digimental?   @relation(fields: [digimentalId], references: [id])
  digimentalId Int?
}

model DigimonName {
  id        Int     @id @default(autoincrement())
  lang      String
  name      String
  digimon   Digimon @relation(fields: [digimonId], references: [id])
  digimonId Int
}

model Universe {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  series     Series[]
  movies     Movie[]
  characters Character[]
}

model Series {
  id              Int          @id @default(autoincrement())
  title           String       @db.VarChar(255)
  synopsis        String
  originalAirDate DateTime
  episodes        Episode[]
  digimons        Digimon[]
  digivices       Digivice[]
  characters      Character[]
  digimentals     Digimental[]
  crests          Crest[]
  universe        Universe     @relation(fields: [universeId], references: [id])
  universeId      Int
}

model Episode {
  id              Int         @id @default(autoincrement())
  title           String      @db.VarChar(255)
  synopsis        String
  originalAirDate DateTime
  series          Series      @relation(fields: [seriesId], references: [id])
  seriesId        Int
  characters      Character[]
  digimons        Digimon[]
}

model Movie {
  id              Int          @id @default(autoincrement())
  title           String       @db.VarChar(255)
  synopsis        String
  originalAirDate DateTime
  universe        Universe     @relation(fields: [universeId], references: [id])
  universeId      Int
  characters      Character[]
  digimons        Digimon[]
  digivices       Digivice[]
  crests          Crest[]
  digimentals     Digimental[]
}

model Character {
  id             Int          @id @default(autoincrement())
  name           String       @db.VarChar(255)
  isDigiDestined Boolean
  series         Series[]
  digivices      Digivice[]
  crests         Crest[]
  digimentals    Digimental[]
  universes      Universe[]
  episodes       Episode[]
  movies         Movie[]
}

model Digivice {
  id             Int          @id @default(autoincrement())
  digiDestined   Character    @relation(fields: [digiDestinedId], references: [id])
  digiDestinedId Int
  colors         String[]     @db.VarChar(255)
  type           DigiviceType
  series         Series[]
  movies         Movie[]
}

enum DigiviceType {
  CLASSIC
  D_3
}

model Crest {
  id            Int         @id @default(autoincrement())
  name          String      @db.VarChar(255)
  description   String
  digiDestineds Character[]
  series        Series[]
  movies        Movie[]
  digimental    Digimental  @relation(fields: [digimentalId], references: [id])
  digimentalId  Int         @unique
}

model Digimental {
  id            Int         @id @default(autoincrement())
  name          String      @db.VarChar(255)
  description   String
  digiDestineds Character[]
  digimons      Digimon[]
  series        Series[]
  movies        Movie[]
  crest         Crest?
}
